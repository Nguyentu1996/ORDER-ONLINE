// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebDeApplication.Models.Data;

namespace WebDeApplication.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("WebDeApplication.Models.DashboardData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Month");

                    b.Property<float>("PercentCancel");

                    b.Property<float>("PercentDelay");

                    b.Property<float>("PercentOrder");

                    b.Property<double>("PercentProfit");

                    b.Property<string>("SiteName");

                    b.Property<int>("TotalCancel");

                    b.Property<int>("TotalDelay");

                    b.Property<int>("TotalOrder");

                    b.Property<double>("TotalProfit");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.ToTable("DashboardData");
                });

            modelBuilder.Entity("WebDeApplication.Models.DataDauVao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress");

                    b.Property<string>("CanMua")
                        .IsRequired();

                    b.Property<long>("CreateDate");

                    b.Property<DateTime>("CreateDateFD");

                    b.Property<string>("DaMua");

                    b.Property<string>("Debt");

                    b.Property<string>("GhiChu");

                    b.Property<string>("GiaSale");

                    b.Property<string>("GiaUSD");

                    b.Property<string>("ItemInTrack");

                    b.Property<string>("LinkSanPham");

                    b.Property<string>("LinkTrack");

                    b.Property<string>("MaSP");

                    b.Property<string>("Mau");

                    b.Property<string>("Name");

                    b.Property<string>("NgayGui");

                    b.Property<string>("ODNumber")
                        .IsRequired();

                    b.Property<string>("Payment");

                    b.Property<string>("Rate");

                    b.Property<string>("ShipOrTax");

                    b.Property<string>("Size");

                    b.Property<string>("Status");

                    b.Property<string>("TongUSD");

                    b.Property<string>("TongVND");

                    b.Property<bool>("isChecked");

                    b.Property<bool>("stopOrder");

                    b.Property<int>("tyGiaBan");

                    b.Property<int>("tyGiaMua");

                    b.HasKey("Id");

                    b.ToTable("DataDauVao");
                });

            modelBuilder.Entity("WebDeApplication.Models.DataProfitOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CanMua");

                    b.Property<string>("DaMua");

                    b.Property<string>("GiaSale");

                    b.Property<string>("GiaUSD");

                    b.Property<string>("Name");

                    b.Property<double>("NetProfit");

                    b.Property<string>("NgayGui");

                    b.Property<string>("ODnumber");

                    b.Property<int>("OrderId");

                    b.Property<string>("SiteName");

                    b.Property<string>("TongUSD");

                    b.Property<double>("TotalProfit");

                    b.Property<bool>("orderStop");

                    b.Property<int>("tyGiaBan");

                    b.Property<int>("tyGiaMua");

                    b.HasKey("Id");

                    b.ToTable("DataProfitOrder");
                });

            modelBuilder.Entity("WebDeApplication.Models.EmailCancel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("ODNumber");

                    b.Property<int?>("ODParrent");

                    b.Property<string>("ReceivedTime");

                    b.Property<DateTime>("ReceivedTimeFD");

                    b.Property<string>("Shippto");

                    b.Property<string>("Status");

                    b.HasKey("Id");

                    b.ToTable("EmailCancel");
                });

            modelBuilder.Entity("WebDeApplication.Models.EmailDelay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmailGroupId");

                    b.Property<string>("MessageId");

                    b.Property<string>("ODNumber");

                    b.Property<int?>("ODParrent");

                    b.Property<DateTime>("estimatime");

                    b.Property<string>("fromAddress");

                    b.Property<string>("name");

                    b.Property<string>("orderTotal");

                    b.Property<string>("receivedTime");

                    b.Property<bool>("shipped");

                    b.Property<string>("shippto");

                    b.Property<string>("status");

                    b.Property<string>("tracking");

                    b.HasKey("Id");

                    b.ToTable("EmailDelay");
                });

            modelBuilder.Entity("WebDeApplication.Models.EmailGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmailReaderId");

                    b.Property<string>("MessageId");

                    b.Property<string>("ODNumber");

                    b.Property<int?>("ODParrent");

                    b.Property<string>("address");

                    b.Property<DateTime>("estimatime");

                    b.Property<string>("fromAddress");

                    b.Property<string>("name");

                    b.Property<string>("orderTotal");

                    b.Property<DateTime>("received");

                    b.Property<string>("receivedTime");

                    b.Property<bool>("shipped");

                    b.Property<string>("shippto");

                    b.Property<string>("status");

                    b.Property<string>("status2");

                    b.Property<string>("toAddress");

                    b.Property<string>("tracking");

                    b.HasKey("Id");

                    b.ToTable("EmailGroup");
                });

            modelBuilder.Entity("WebDeApplication.Models.EmailReader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ODNumber");

                    b.Property<string>("address");

                    b.Property<string>("ccAddress");

                    b.Property<DateTime>("estimateDilivery");

                    b.Property<string>("folderId");

                    b.Property<string>("fromAddress");

                    b.Property<string>("hasInline");

                    b.Property<bool>("isChecked");

                    b.Property<string>("messageId");

                    b.Property<string>("name");

                    b.Property<int?>("odParrent")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("orderDate");

                    b.Property<string>("orderTotal");

                    b.Property<string>("priority");

                    b.Property<string>("receivedTime");

                    b.Property<long>("receivedTimeLong");

                    b.Property<string>("sender");

                    b.Property<string>("sentDateInGMT");

                    b.Property<bool>("shipped");

                    b.Property<string>("shippto");

                    b.Property<string>("status");

                    b.Property<string>("status2");

                    b.Property<string>("subject");

                    b.Property<string>("summary");

                    b.Property<string>("toAddress");

                    b.Property<string>("tracking");

                    b.HasKey("Id");

                    b.HasIndex("messageId");

                    b.HasIndex("ODNumber", "status2");

                    b.ToTable("EmailReader");
                });

            modelBuilder.Entity("WebDeApplication.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("ItemCd");

                    b.Property<string>("MessageId");

                    b.Property<string>("Name");

                    b.Property<string>("ODnumber");

                    b.Property<string>("Price");

                    b.Property<int>("Quantity");

                    b.Property<string>("receiveiTime");

                    b.Property<long>("receiveiTimeLong");

                    b.HasKey("Id");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
