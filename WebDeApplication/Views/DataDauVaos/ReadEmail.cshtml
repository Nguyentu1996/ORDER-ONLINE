@model IEnumerable<WebDeApplication.Models.EmailGroup>

@{
    ViewData["Title"] = "ReadEmail";
}

<div class="col-12">
    <div class="card">
        <div class="card-header" id="headingOne">
            <h5 class="mb-0">Search</h5>
        </div>
        <div id="collapseOne" class=" card-body collapse show" aria-labelledby="headingOne" data-parent="#search">
            @*<div class="row">
            <div class="col-md-12">
                <form class="form-inline  w-100" asp-action="ReadEmailAction" method="post">
                    <div class="col-md-6 px-0">
                        <div class="form-group mb-2">
                            <label style="min-width:80px">From Date: &nbsp;</label>
                            <input type="text" name="from" class="form-control w-75" placeholder="10/10/2021 . . ." autocomplete="off">
                        </div>

                    </div>
                    <div class="col-md-6 px-0">
                        <div class="form-group mb-2 justify-content-end">
                            <label style="min-width:80px">To Date: &nbsp;</label>
                            <input type="text" name="to" class="form-control w-75" placeholder="20/10/2021. . ." autocomplete="off">
                        </div>
                    </div>
                    <div class="col-md-6 px-0">
                        <div class="form-group mb-2">
                            <label style="min-width:80px">Code: &nbsp;</label>
                            <input type="text" id="m-search" name="code" class="form-control w-75" placeholder="Code . . ." autocomplete="off">
                        </div>

                    </div>
                    <div class="col-md-6 px-0">
                        <div class="form-group mb-2 justify-content-end">
                            <label style="min-width:80px">Limit: &nbsp;</label>
                            <input type="number" name="limit" class="form-control w-75" placeholder="Limit . . ." autocomplete="off">
                        </div>
                    </div>
                    <div class="col-md-12 d-flex justify-content-end px-0 mx-0">
                        <button type="submit" id="btn-readEmail" class="btn btn-primary mx-0">Read Email</button>
                    </div>

                </form>
            </div>
        </div>*@
            <div class="row">
                <div class="col-md-12">
                    <form class="form-inline  w-100" asp-action="ReadEmailAction" method="post">
                        <div class="form-group mb-2  w-50 ">
                            <label>Code: &nbsp;</label>
                            <input type="text" id="m-search" name="code" class="form-control w-75" placeholder="Code . . ." autocomplete="off">
                        </div>
                        @*<div class="form-group mb-2">
                            <label>Limit: &nbsp;</label>
                            <input type="number" name="limit" class="form-control w-75" placeholder="Limit . . ." autocomplete="off">
                        </div>*@
                        <button type="submit" id="btn-readEmail" class="btn btn-primary mb-2">Read Email</button>

                    </form>
                </div>
            </div>
        </div>
    </div>

</div>
<div class="col-xl-12 col-md-12">
    <div class="card table-card">
        <div class="card-header">
            <h5 class="mb-0">List data</h5>
            @*<div class="card-header-right">
                <form asp-action="Import" method="post" enctype="multipart/form-data">
                    <input type="file" name="postedFile" id="fileupload" />
                    <button type="submit" class="btn btn-primary mb-2" id="btnupload">Import</button>
                    <a style="float:right" class="btn btn-primary mb-2" asp-action="Create">Create</a>
                </form>
            </div>*@
        </div>
        <div class="card-body px-0 py-0">
            <div class="table-responsive">
                <div class="session-scroll" style="position:relative;">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.ODNumber)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.name)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.status)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.address)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.shippto)
                                </th>

                                @*<th>
                                    @Html.DisplayNameFor(model => model.subject)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.summary)
                                </th>*@
                                <th>
                                    @Html.DisplayNameFor(model => model.fromAddress)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.tracking)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.toAddress)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.receivedTime)
                                </th>
                                <th>

                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                
                            <tr id="tr_@item.Id" >
                                <td>
                                    <a class="pointer-events" onclick="location.href = '@(Url.Action("EmailReaderDetails", "DataDauVaos", new { id = item.Id }))'">  @Html.DisplayFor(modelItem => item.ODNumber)</a>
                                  
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.status)
                                </td>
                                <td style="max-width:200px; overflow:hidden" data-toggle="tooltip" data-placement="top" title="@item.address">
                                    @Html.DisplayFor(modelItem => item.address)
                                </td>
                                <td style="max-width:200px; overflow:hidden" data-toggle="tooltip" data-placement="top" title="@item.shippto">
                                    @Html.DisplayFor(modelItem => item.shippto)
                                </td>
                                @*<td style="max-width:200px; overflow:hidden" data-toggle="tooltip" data-placement="top" title="@item.subject">
                                    @Html.DisplayFor(modelItem => item.subject)
                                </td>
                                <td style="max-width:200px; overflow:hidden" data-toggle="tooltip" data-placement="top" title="@item.summary">
                                    @Html.DisplayFor(modelItem => item.summary)
                                </td>*@
                                <td>
                                    @Html.DisplayFor(modelItem => item.fromAddress)
                                </td>
                                <td>
                                    @if (item.tracking != null)
                                    {
                                        @Html.DisplayFor(modelItem => item.tracking)
                                    }
                                    else
                                    {
                                        <p>---</p>
                                    }

                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.toAddress)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.receivedTime)
                                </td>

                                <td>
                                </td>
                            </tr>

                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-end px-3 mt-3">
                    <li style="display:flex;align-items:center">
                        <p class="m-0 mx-3">Total @ViewBag.totalData</p>
                    </li>
                    @{
                        int numberPage = ViewBag.numberPage;
                        int pageCurrent = ViewBag.pageCurrent;
                        int offset = 2;//number display page


                        //config FirstLink
                        if (pageCurrent > 1)
                        {
                            int prevPage = pageCurrent - 1;
                            var PrevLink = new Dictionary<string, string> {
                                            { "Day", Context.Request.Query["Day"].ToString()},
                                            { "Month", Context.Request.Query["Month"].ToString()},
                                            { "Year", Context.Request.Query["Year"].ToString()},
                                            { "page", prevPage.ToString() }
                                        };
                            <li class="page-item"><a asp-controller="DataDauVaos" asp-action="ReadEmail" asp-all-route-data="PrevLink" class="page-link">Prev Link</a></li>
                        }

                        int from = pageCurrent - offset;
                        int to = pageCurrent + offset;
                        if (from <= 0)
                        {
                            from = 1;
                            to = offset * 2;
                        }


                        if (to > numberPage)
                        {
                            to = numberPage;
                        }

                        int x;
                        for (x = from; x <= to; x++)
                        {
                            var parms = new Dictionary<string, string>
                                                                                                                                                                                                                                                        {
                                             { "Day", Context.Request.Query["Day"].ToString()},
                                             { "Month", Context.Request.Query["Month"].ToString()},
                                             { "Year", Context.Request.Query["Year"].ToString()},
                                             { "page",x.ToString() }
                                        };
                            if (pageCurrent == x)
                            {
                                <li class="page-item active"><a asp-controller="DataDauVaos" asp-action="ReadEmail" asp-all-route-data="parms" class="page-link">@x</a></li>
                            }
                            else
                            {
                                <li class="page-item"><a asp-controller="DataDauVaos" asp-action="ReadEmail" asp-all-route-data="parms" class="page-link">@x</a></li>
                            }

                        }

                        if (pageCurrent < numberPage - (to / 2))
                        {
                            <li class="page-item"><a class="page-link">...</a></li>
                            var LastLink = new Dictionary<string, string> {
                                             { "Day", Context.Request.Query["Day"].ToString()},
                                             { "Month", Context.Request.Query["Month"].ToString()},
                                             { "Year", Context.Request.Query["Year"].ToString()},
                                             { "page",numberPage.ToString() } };
                            <li class="page-item"><a asp-controller="DataDauVaos" asp-action="ReadEmail" asp-all-route-data="LastLink" class="page-link">Last Link</a></li>
                        }

                        if (pageCurrent < numberPage)
                        {
                            int nextPage = pageCurrent + 1;
                            var NextLink = new Dictionary<string, string> {
                                             { "Day", Context.Request.Query["Day"].ToString()},
                                             { "Month", Context.Request.Query["Month"].ToString()},
                                             { "Year", Context.Request.Query["Year"].ToString()},
                                             { "page",nextPage.ToString() }  };
                            <li class="page-item"><a asp-controller="DataDauVaos" asp-action="ReadEmail" asp-all-route-data="NextLink" class="page-link">Next Link</a></li>
                        }
                    }
                </ul>
            </nav>

        </div>
    </div>
</div>
        @*<script type="text/javascript">
                $(document).ready(function () {
                     //$('#detailsModal').modal('show');
                    $('#btn-readEmail').on('click', function () {                      
                        var code = $("#m-search").val();
                        if (!code) {
                            alert("Code is empty");
                            return;
                        }

                        //$.ajax({
                        //    url: '/DataDauVaos/ReadEmail',
                        //    method: 'POST',
                        //    data: code,   // convert obj to string json
                        //    contentType: 'application/json',
                        //    success: function (data) {
                        //        if (data.status === 1) {
                        //            //$('#loader-bg').;
                        //        }
                        //    }

                        //});
                        //alert("search")

                    })
                });

            </script>*@
